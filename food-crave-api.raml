#%RAML 0.8
title: food-crave
version: v1
baseUri: http://ritwik-dell-test.apigee.net/food-crave/{version}

schemas:
  - collection-response: |
      type: "object"
      required: 
        - "response-status"
      properties: 
        page-size: 
          type: "number"
        offset: 
          type: "number"
        total-records: 
          type: "number"
        data: 
          type: "array"
          items: 
            $ref: <<resourcePathName|!singularize>>
        response-status: 
          $ref: response-status

  - item-response: |
      type: "object"
      required: 
        - "response-status"
      properties: 
        data: 
          type: "array"
          items: 
            $ref: <<resourcePathName|!singularize>>
        response-status: 
          $ref: response-status
  - restaurant: !include food-crave-restaurant.schema

  - category: |
      type: array
      items:
        type: string
  
  - location: !include food-crave-location.schema
  
  - response-status: !include response-status.schema
  
  - error-block: !include response-status-error-block.schema

  - error: !include response-status-error.schema


resourceTypes:
  - collection:
      description: Collection of <<resourcePathName>> 
      
      get:
        is:
          - pageable
        description: Collection of <<resourcePathName>> with the given search criteria
        headers:
          content-type:
            description: Content-type in which communication needs to happen
            required: true
            type: string
            enum: [application/json, application/xml]
        responses:
          200:
            description: Response for successful request
            body:
              application/json:
                schema: collection-response
          400:
            description: Response for bad request
            body:
              application/json:
                schema: collection-response
          401:
            description: Response for unauthorized request
            body:
              application/json:
                schema: collection-response
          404:
            description: Response for resource not found
            body:
              application/json:
                schema: collection-response
          500:
            description: Response for internal error
            body:
              application/json:
                schema: collection-response
  - collection-item:
      description: Specific restaurant details
      
      get: 
        description: Get a specific <<resourcePathName|!singularize>> by Id
        headers:
          content-type:
            description: Content-type in which communication needs to happen
            required: true
            type: string
            enum: [application/json, application/xml]
        responses:
          200:
            description: Response for successful request
            body:
              application/json:
                schema: item-response
          400:
            description: Response for bad request
            body:
              application/json:
                schema: item-response
          401:
            description: Response for unauthorized request
            body:
              application/json:
                schema: item-response
          404:
            description: Response for resource not found
            body:
              application/json:
                schema: item-response
          500:
            description: Response for internal error
            body:
              application/json:
                schema: item-response

traits:
  - pageable:
      queryParameters:
        offset:
          description: To fetch the next set of results, offset the result-set by this amount
          required: false
          type: integer
          minimum: 0
          default: 0  
        page-size:
          description: Number of restaurant details (or size of resultset) desired
          required: false
          type: integer
          minimum: 1
          maximum: 15
          default: 10
  - sortable:
      queryParameters:
        order-by:
          description: 'Order-by field. Should be one of: <<fieldsList>>'
          required: false
          type: string
        order:
          description: Sorting order
          required: false
          enum: <<sort-order>>
          default: desc          

/restaurants:
  type: collection
  
  get:
    is:
      - sortable: {fieldsList: "distance, ratings", sort-order: "desc, asc"}
    queryParameters:
      address:
        displayName: address
        description: Address near which restaurant needs to be fetched
        required: true
        type: string
      food-pref:
        description: The food/cuisine preference of the user
        required: false
        type: string
      distance:
        description: The radial distance in kilometers (KMs) from the location from where to fetch the restaurants for
        required: false
        type: integer
        minimum: 1
        maximum: 40
        default: 40
    responses:


  /{restaurantId}:
    type: collection-item
    get:
      responses:

    